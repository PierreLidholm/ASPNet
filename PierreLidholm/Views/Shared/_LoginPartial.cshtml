@using Microsoft.AspNetCore.Identity

@inject SignInManager<AccountManager> SignInManager
@inject UserManager<AccountManager> UserManager

@{
    var user = await UserManager.GetUserAsync(User);
}



    <ul class="navbar-nav">
        @if (SignInManager.IsSignedIn(User))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @user.FirstName</a>
            </li>
            <li class="nav-item">
                <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
                </form>
            </li>
        }
        else
        {
            <div class="dropdown">
                <a id="nav-user" class="nav-link" href="#"><i class="fas fa-user"></i></a>
                <div class="dropdown-content">
                    <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Log in</a>
                    <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
                </div>
            </div>
        }
    </ul>
